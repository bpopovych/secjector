---
name: CHR smoke (QEMU no-KVM)

'on':
  workflow_dispatch:
  # schedule:
  #   - cron: "0 3 * * *" # nightly smoke

jobs:
  chr-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Optional: quick visibility if something's off
      # - name: Debug workspace
      #   run: |
      #     find . -maxdepth 3 -type f -print | sort

      - name: Sanity check required files
        run: |
          set -euxo pipefail
          files=(
            secrets.rsc
            tests/secrets.yaml
            tests/integration/example_main.rsc
          )
          for f in "${files[@]}"; do
            echo "check:$f"
            test -f "$f" || { echo "::error file=$f::missing"; exit 1; }
          done

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-system-x86 \
            qemu-utils \
            unzip \
            expect \
            openssh-client \
            curl

      - name: Fetch CHR image
        run: |
          VER="7.17.2"   # update as needed
          url="https://download.mikrotik.com/routeros/${VER}/chr-${VER}.img.zip"
          curl -fsSLO "$url"
          unzip -q "chr-${VER}.img.zip"
          qemu-img convert -f raw -O qcow2 "chr-${VER}.img" chr.qcow2

      - name: Boot CHR (background)
        run: |
          nohup qemu-system-x86_64 \
            -name "chr-ci" \
            -m 256 -smp 1 \
            -drive file=chr.qcow2,if=virtio,format=qcow2 \
            -nographic -monitor none \
            -serial telnet:127.0.0.1:5555,server,nowait \
            -netdev user,id=n1,hostfwd=tcp::2222-:22 \
            -device virtio-net-pci,netdev=n1 \
            -cpu max -machine accel=tcg \
            > qemu.log 2>&1 & echo $! > qemu.pid
          sleep 15
          echo "QEMU PID=$(cat qemu.pid)"

      - name: Configure CHR via serial (expect)
        run: |
          cat > serial-setup.exp <<'EOF'
          #!/usr/bin/expect -f
          set timeout 180
          spawn telnet 127.0.0.1 5555
          expect {
            -re "Login:" {}
            -re "MikroTik RouterOS" { exp_continue }
          }
          send -- "admin\r"
          expect {
            -re "Password:" { send -- "\r" }
            -re "logged in" {}
          }
          # Basic net + SSH
          send -- "/ip address add address=10.0.2.15/24 interface=ether1 "
          send -- "comment=ci\r"
          send -- "/ip route add dst-address=0.0.0.0/0 gateway=10.0.2.2\r"
          send -- "/ip service set ssh disabled=no port=22\r"
          send -- "quit\r"
          expect eof
          EOF
          chmod +x serial-setup.exp
          ./serial-setup.exp

      - name: Wait for SSH
        run: |
          ssh_base="ssh -o StrictHostKeyChecking=no -o ConnectTimeout=2 -p 2222"
          for i in {1..30}; do
            if $ssh_base admin@127.0.0.1 \
              ":put [/system resource get version]" 2>/dev/null; then
              echo "SSH up"; exit 0
            fi
            sleep 2
          done
          echo "SSH did not come up"; cat qemu.log; exit 1

      - name: Push test files
        run: |
          scp_opts=(-P 2222 -o StrictHostKeyChecking=no)
          scp "${scp_opts[@]}" \
            secrets.rsc \
            tests/secrets.yaml \
            tests/integration/example_main.rsc \
            admin@127.0.0.1:

      - name: Run injector smoke test
        run: |
          ssh_opts=(-p 2222 -o StrictHostKeyChecking=no)
          ssh "${ssh_opts[@]}" admin@127.0.0.1 \
            '/import file-name=example_main.rsc' \
            | tee ci-run.log
          grep -q 'TEST_OK:' ci-run.log

      - name: Teardown QEMU
        if: always()
        run: |
          if [[ -f qemu.pid ]]; then kill -TERM "$(cat qemu.pid)" || true; fi
          sleep 3
          ps aux | grep qemu || true
